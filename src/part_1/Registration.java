/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package part_1;
import javax.swing.JOptionPane;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

/**
 *
 * @author RC_Student_lab
 */
public class Registration extends javax.swing.JFrame {
    
    //
    String storedUsername;
    String storedPassword;
    
    
    /**
     * Creates new form Registration
     */
    public Registration() {
        initComponents();
        
        //setup the form
        setTitle("Registration");
        setSize(500, 400);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Username = new javax.swing.JTextField();
        Firstname = new javax.swing.JTextField();
        Lastname = new javax.swing.JTextField();
        Cellnum = new javax.swing.JTextField();
        Passwordtnt = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Username");

        jLabel2.setText("Firstname");

        jLabel3.setText("Lastname");

        jLabel4.setText("Password");

        jLabel5.setText("Cellphone");

        button.setText("Register");
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE))
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Passwordtnt, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Firstname)
                    .addComponent(Lastname)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Cellnum))
                .addGap(93, 93, 93))
            .addGroup(layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(button)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addComponent(Firstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Lastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Passwordtnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(Cellnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(button)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
        handleRegistration();
    }//GEN-LAST:event_buttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Cellnum;
    private javax.swing.JTextField Firstname;
    private javax.swing.JTextField Lastname;
    private javax.swing.JPasswordField Passwordtnt;
    private javax.swing.JTextField Username;
    private javax.swing.JButton button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables

    private void handleRegistration() {
        String username = Username.getText();
        String firstname = Firstname.getText();
        String password = new String(Passwordtnt.getPassword());
        String lastname = Lastname.getText();
        String cellPhoneNumber = Cellnum.getText();
        
        
        String registrationMessage = registerUser(username, firstname, password, lastname, cellPhoneNumber);
        JOptionPane.showMessageDialog(Registration.this, registrationMessage,"Registration status", JOptionPane.INFORMATION_MESSAGE);
        if (registrationMessage.equals("Registration successful!")){
            User.getInstance().setCredentials(username, password);
            dispose();//close registration window
        System.out.println("Stored username: " + username + "Stored passowrd" + password);
    }
    }


    private String registerUser(String username, String firstname, String password, String lastname, String cellPhoneNumber) {
        //check username and password complexity
        if(!checkUserName(username)){
            return "username must contain an underscore (_) and be no longer than 5 characters long!";
            
        }
        if (!checkPasswordComplexity(password)){
            return "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one digit and one special character";
            
        }
        if (!isCellPhoneValid(cellPhoneNumber)){
            return "Cell number is incorrectly formatted or does not contain an international code, please correct the number and try again";
        }
        
        //implement actual registration logic 
        //for demonstration, assume registration is successful
        return "Registration successful!";
    }

    boolean checkUserName(String username) {
        return username.contains("_") && username.length() <= 5;
        
    }

    private boolean checkPasswordComplexity(String password) {
    return password.length() >= 8
             && password.matches(".*[A-Z].*")
             && password.matches(".*[a-z].*")
             && password.matches(".*\\d.*")
             && password.matches(".*[!@#$%^&*()-_=+\\|[{]};:'\",<.>/?`~].*");
    }
      
    
    //cell phone number must start with 07, 08, or 06 and have 10 digits 
    private boolean isCellPhoneValid(String cellPhoneNumber) {
 //       return Pattern.matches("^(06|07|08)[0-9]{8}$", cellPhoneNumber);
      //Regex to match a phone number with international country code(e.g., +27 for South Africa)
      String regex = "^\\+[1-9][0-9]{0,2}[0-9]{9,10}$";
      
      //compile the regex pattern
      Pattern pattern = Pattern.compile(regex);
      
      //match the input cell number against the pattern
      Matcher matcher = pattern.matcher(cellPhoneNumber);
      
      //return true if phone numbr=er matches the pattern, otherwise false
      return matcher.matches();
    }
    
    public void storeLoginCredentials(String username, String password){
        // store Login credentials 
        this.storedUsername = username;
        this.storedPassword = password;
    }
    
    public boolean checkLoginCredentials(String username, String password){
        return username.equals(storedUsername) && password.equals(storedPassword);
        
    }
    
    
    
     
    
    
    
    
}
